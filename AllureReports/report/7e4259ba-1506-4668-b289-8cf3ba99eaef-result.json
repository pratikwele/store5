{"name": "test_additem", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <Test_case.test_PurchaseItem.Test_001 object at 0x000000000403C208>\nsetup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"694455b7-7cbd-4982-9df6-2fdd4ed17d6a\")>\n\n    def test_additem(self,setup):\n        self.log.info(\" test_additem is started\")\n        self.driver=setup\n        self.log.info(\" Browser is opening \")\n        self.driver.get(\"https://demoblaze.com/index.html\")\n        self.log.info(\" Going to https://demoblaze.com/index.html url\")\n        self.driver.maximize_window()\n        self.obj=AddItems(self.driver)\n        self.driver.implicitly_wait(360)\n        self.obj.clickphone()\n        self.log.info(\" Clicking on phone tab\")\n        self.obj.clickSamsung()\n        self.log.info(\"Clicking on phone samsung \")\n        self.obj.clickAddTocart()\n        self.log.info(\"Clicking addTocart button \")\n        self.obj.explicitwaitAlert()\n        self.obj.clickhome()\n        self.log.info(\"Clicking home  button \")\n        self.obj.clickmonitor()\n        self.log.info(\"Clicking on monitor \")\n        self.obj.clickAsus()\n        self.log.info(\"Clicking  on Asusu\")\n        self.obj.clickAddTocart()\n        self.log.info(\"Clicking addTocart button \")\n        self.obj.explicitwaitAlert()\n        self.obj.clickhome()\n        self.log.info(\"Clicking home  button \")\n        self.obj.clickLaptop()\n        self.log.info(\"Clicking  on Laptop\")\n        self.obj.clickDell()\n        self.log.info(\"Clicking  on Dell\")\n        self.obj.clickAddTocart()\n        self.log.info(\"Clicking addTocart button \")\n        self.obj.explicitwaitAlert()\n        self.obj.clickCarturl()\n        self.log.info(\"Clicking carturl  \")\n        self.obj.verify_amount()\n        # time.sleep(5)\n        # self.row=self.obj.fetchRows()\n        # self.col=self.obj.fetchCols()\n    \n        self.obj.clickPlaceOrder()\n        self.log.info(\"Clicking Place order button \")\n    \n        time.sleep(1)\n        # self.explicitwaitSet(self.obj.setName()).send_keys(\"India\")\n        # self.driver.find_element(By.XPATH,self.obj.name).send_keys('rahul')\n        self.obj.setName()\n        self.log.info(\" Entering name \")\n        self.obj.setCountry()\n        self.log.info(\" Entering country\")\n        self.obj.setCity()\n        self.log.info(\" Entering city \")\n        self.obj.setCreditCard()\n        self.log.info(\" Entering  credit card detail \")\n        self.obj.setMonth()\n        self.log.info(\" Entering  the month \")\n        self.obj.setYear()\n        self.log.info(\" Entering  year \")\n        self.obj.clickPurchse()\n        self.log.info(\" Clcking on purchase button \")\n        if self.obj.fetchYourPurchase()==\"Thank you for your purchase!\":\n           self.log.info(\" test_additem is passed \")\n           assert True\n        else :\n            self.log.info(\" test_additem is failed \")\n            allure.attach(self.driver.get_full_page_screenshot_as_png(),name=\"test_additemfailed\",\n                          attachment_type=AttachmentType.PNG)\n>           assert False\nE           assert False\n\nTest_case\\test_PurchaseItem.py:85: AssertionError"}, "attachments": [{"name": "test_additemfailed", "source": "36b76b92-a16d-4222-b5b0-becdeeed116b-attachment.png", "type": "image/png"}, {"name": "log", "source": "f28ff3e1-d6c5-405c-aaeb-c8452facd795-attachment.txt", "type": "text/plain"}], "start": 1706531810050, "stop": 1706532066425, "uuid": "bec61dac-6b49-45b9-b1fb-ea3421c972dd", "historyId": "53f73e2b70175359a940504883ceb065", "testCaseId": "53f73e2b70175359a940504883ceb065", "fullName": "Test_case.test_PurchaseItem.Test_001#test_additem", "labels": [{"name": "parentSuite", "value": "Test_case"}, {"name": "suite", "value": "test_PurchaseItem"}, {"name": "subSuite", "value": "Test_001"}, {"name": "host", "value": "USER-PC"}, {"name": "thread", "value": "6028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_case.test_PurchaseItem"}]}